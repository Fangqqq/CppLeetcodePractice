https://leetcode.cn/problems/reverse-linked-list/

//迭代法

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* prev=nullptr;
        ListNode* curr=head;//当前节点
        while(curr)
        {
            ListNode* next=curr->next;//将当前节点的 next 指针改为指向前一个节点
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
   }
};

------------------------------------------
 //递归法
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        //递归终止条件
        if (!head || !head->next) //空或只有一个元素时不用反转
        {
            return head;
        }
        
        ListNode* p = reverseList(head->next);

        head->next->next = head;
        head->next = nullptr;
        return p;
    }
};