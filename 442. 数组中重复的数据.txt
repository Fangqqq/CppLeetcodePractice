https://leetcode.cn/problems/find-all-duplicates-in-an-array/

方法：排序
因为每个整数出现 一次 或 两次，讲数组排序后遍历判断前后元素是否一样

//因为有排序，时间复杂度不达标

class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<int> ans;
        for(int i=0;i<nums.size()-1;i++){
            if(nums[i]==nums[i+1]){
                ans.push_back(nums[i]);
            }
        }
        return ans;
    }
};

-----------------
方法二：使用正负号作为标记
可以给 nums[i] 加上「负号」表示数 i+1 已经出现过一次。
首先对数组进行一次遍历。当遍历到位置 i 时，考虑 [nums[i]−1] 的正负性：
如果是正数，说明 nums[i] 还没有出现过，将 [nums[i]−1] 加上负号；

如果是负数，说明nums[i] 已经出现过一次，将nums[i] 放入答案。

class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        vector<int> ans;
        for(int i=0;i<nums.size();i++){
            int x = abs(nums[i]);
            if(nums[x-1]>0){
                nums[x-1]=-nums[x-1];
            }else{
                ans.push_back(x);
            }
        }
        return ans;
    }
};

