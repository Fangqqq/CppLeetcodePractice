https://leetcode.cn/problems/ti-huan-kong-ge-lcof/

思路分析
首先分析题目知道要想把里面的空格替换不能直接替换因为字符串数组移动很麻烦，所以先统计整个字符串数组中的空格数目然后把字符串大小扩大为替换后的大小，然后用双指针方法移元素。
实现
统计字符串数组中空格的个数
扩充数组到每个空格替换成 %20 之后的大小。
然后从后向前替换空格，也就是双指针法，过程如下：
i 指向新长度的末尾，j 指向旧长度的末尾。



class Solution {
public:
    string replaceSpace(string s) {
        /*定义扩充数组的变量 */
        int count = 0;
        /* 原计算数组的大小 */
        int sizeOld = s.size();
        /* 计算空格数量 */
        for(int k = 0; k < s.size(); k++){
            if(s[k] == ' '){
                count++;
            }
        }

        /* 根据空格数量扩充数组大小 */
        s.resize(s.size() + count * 2);
        /* 定义新的数组长度 */
        int sizeNew = s.size();//这里的size已经是填充后的数组的长度
        /* 填充空格为%20 */
        for(int i = sizeOld - 1, j = sizeNew - 1; i < j; i--,j--){
            /* 若原来的字符不为空格则进行交换 */
            if(s[i] != ' '){
                s[j] = s[i];
            }
            else{
                s[j] = '0';
                s[j - 1] = '2';
                s[j - 2] = '%';
                j -= 2;
            }
        }
        return s;
    }
};