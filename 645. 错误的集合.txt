https://leetcode.cn/problems/set-mismatch/

方法一：数学方法
求1+2...+N的和，nums唯一set()的和，和nums的和对应做减法直接得到结果

class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {
        unordered_set<int> st;
        int sumnums=0,sumst=0;
		//nums的和
        for(int num:nums){
            st.insert(num);
            sumnums+=num;
        }
		//nums唯一set()的和
        for(int num:st){
            sumst+=num;
        }
		//1+2...+N的和
        int num=(1+(nums.size()))*nums.size()/2;  
        vector<int> ans(2);
        ans[0]=sumnums-sumst;
        ans[1]=num-sumst;

        return ans;
    }
};




方法二：哈希表
重复的数字在数组中出现 2 次，丢失的数字在数组中出现 0 次，其余的每个数字在数组中出现 1 次。
可以使用哈希表记录每个元素在数组中出现的次数，然后遍历从 1 到 n 的每个数字，
分别找到出现 2 次和出现 0 次的数字，即为重复的数字和丢失的数字。


class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {
        unordered_map<int,int> mp;
        for(int num:nums){
            mp[num]++;
        }
        vector<int> ans(2);

        for (int i = 1; i <= nums.size(); i++){
            int time=mp[i];
            if(time==2){
                ans[0]=i;
            }
            if(time==0){
                ans[1]=i;
            }
        }  

        return ans;
    }
};
